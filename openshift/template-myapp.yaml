apiVersion: v1
kind: Template
metadata:
  name: myapp
objects:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      name: sample-pipeline
    name: myapp-pipeline
  spec:
    runPolicy: Serial
    source:
      git:
        ref: master
        uri: https://github.com/vpavlin/vertx-demo
      type: Git
    strategy:
      jenkinsPipelineStrategy:
        jenkinsfilePath: Jenkinsfile
      type: JenkinsPipeline
    triggers:
    - github:
        secret: secret101
      type: GitHub
    - generic:
        secret: secret101
      type: Generic
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: vertx-helloworld-maven
      application: vertx-helloworld-maven
      createdBy: template-vertx-helloworld-maven
    name: myapp
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: myapp:latest
    runPolicy: Serial
    source:
      git:
        ref: master
        uri: https://github.com/vpavlin/vertx-demo
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: vertx-s2i:latest
      type: Source
    triggers:
    - github:
        secret: 80l8RJwt
      type: GitHub
    - generic:
        secret: 7GGFe1BW
      type: Generic
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: vertx-helloworld-maven
      application: vertx-helloworld-maven
      createdBy: template-vertx-helloworld-maven
    name: myapp
  spec:
    tags:
    - importPolicy: {}
      name: latest
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: myapp
    labels:
      app: vertx-helloworld-maven
      application: vertx-helloworld-maven
      createdBy: template-vertx-helloworld-maven
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources: {}
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - myapp
          from:
            kind: ImageStreamTag
            name: 'myapp:latest'
    replicas: 1
    test: false
    selector:
      deploymentconfig: myapp
    template:
      metadata:
        creationTimestamp: null
        labels:
          deploymentconfig: myapp
      spec:
        containers:
          - name: myapp
            image: myapp
            ports:
              - containerPort: 8080
                protocol: TCP
            resources: {}
            livenessProbe:
              tcpSocket:
                port: 8080
              initialDelaySeconds: 30
              timeoutSeconds: 1
              periodSeconds: 10
              successThreshold: 1
              failureThreshold: 3
            terminationMessagePath: /dev/termination-log
            imagePullPolicy: IfNotPresent
            securityContext:
              capabilities: {}
              privileged: false
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: vertx-helloworld-maven
      application: vertx-helloworld-maven
      createdBy: template-vertx-helloworld-maven
    name: myapp
  spec:
    ports:
    - name: myapp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: myapp
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: vertx-helloworld-maven
      application: vertx-helloworld-maven
      createdBy: template-vertx-helloworld-maven
    name: myapp
  spec:
    to:
      kind: Service
      name: myapp
      weight: 100


